archetype zombie_market(fa2: address)

record transfer_destination {
  to_dest           : address;
  token_id_dest     : nat;
  token_amount_dest : nat
} as ((%to_, (token_id, amount)))

record transfer_param {
  tp_from : address;
  tp_txs  : list<transfer_destination>;
} as ((%from_, %txs))

asset order identified by id to big_map {
    id: nat;
    seller: address;
    token_id: nat;
    amount: nat;
    price: tez;
    expiry: date;
}

variable next_order_id: nat = 1

entry sell(token_id_: nat, amount_: nat, price_: tez, expiry_: date) {
    require {
        r1: amount_ > 0;
        r_expiry: expiry_ > now;
    }

    effect {
        order.put({
            id = next_order_id;
            seller = caller;
            token_id = token_id_;
            amount = amount_;
            price = price_;
            expiry = expiry_
        });
        next_order_id += 1;
    }
    
}

entry buy(order_id: nat, amount_: nat) {
    require {
        r2: amount_ > 0;
        r3: order.contains(order_id) and order[order_id].amount >= amount_;
        r4: transferred = amount_ * order[order_id].price;
        r_expired: order[order_id].expiry > now;
    }
    effect {
        order.update(order_id, {
            amount -= amount_
        });

        // transfer the tokens
        const tx: transfer_destination = {
            to_dest = caller;
            token_id_dest = order[order_id].token_id;
            token_amount_dest = amount_
        };
        transfer 0tz to fa2 call %transfer<list<transfer_param>>([{
            tp_from = order[order_id].seller; 
            tp_txs = [tx]
        }]);

        // transfer the tez
        transfer transferred to order[order_id].seller
    }
}



